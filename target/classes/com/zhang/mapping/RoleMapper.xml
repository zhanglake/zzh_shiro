<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhang.dao.RoleDao">
    <resultMap id="ResultMap" type="com.zhang.entity.Role" >
        <id column="role_id" property="id" jdbcType="INTEGER" />
        <result column="role_name" property="name" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="available" property="available" jdbcType="INTEGER" />
        <!-- ofType指定students集合中的对象类型 -->
        <collection property="resources" ofType="com.zhang.entity.Resource">
            <id column="resource_id" property="id" jdbcType="INTEGER" />
            <result column="resource_name" property="name" jdbcType="VARCHAR" />
            <result column="type" property="type" jdbcType="VARCHAR" />
            <result column="url" property="url" jdbcType="VARCHAR" />
            <result column="permission" property="permission" jdbcType="INTEGER" />
            <result column="parent_id" property="parentId" jdbcType="INTEGER" />
            <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
            <result column="available" property="available" jdbcType="INTEGER" />
        </collection>
    </resultMap>

    <!-- 可以复用的sql片段 -->
    <sql id="Base_Insert_Column_List">
        (created_date, created_by, modified_date, modified_by, role_name, description, available)
    </sql>

    <!-- 根据条件筛选 -->
    <select id="selectBySelective" resultMap="ResultMap" parameterType="com.zhang.entity.Page">
        SELECT * FROM (
          SELECT * FROM sys_role
          <where>
              <if test="params.searchText != null and params.searchText != ''">
                  role_name LIKE #{params.searchText}
                  OR description LIKE #{params.searchText}
                  AND
              </if>
              deleted = 0
          </where>
          ORDER BY role_id desc
        ) r1
        LEFT JOIN sys_role_resource rr ON r1.role_id = rr.role_id
        LEFT JOIN sys_resource r2 ON r2.resource_id = rr.resource_id
    </select>

    <select id="findOne" resultMap="ResultMap" parameterType="java.lang.Long">
        SELECT * FROM sys_role r1
        LEFT JOIN sys_role_resource rr ON r1.role_id = rr.role_id
        LEFT JOIN sys_resource r2 ON r2.resource_id = rr.resource_id
        WHERE r1.role_id = #{roleId}
        AND r1.deleted = 0
    </select>

    <select id="findAll" resultMap="ResultMap">
        SELECT * FROM sys_role
        WHERE deleted = 0
    </select>

    <update id="updateToDelete" parameterType="java.lang.Long">
        UPDATE sys_role SET deleted = 1 WHERE role_id = #{id}
    </update>

    <update id="changeToAvailable" parameterType="java.lang.Long">
        UPDATE sys_role SET available = 1 WHERE role_id = #{id}
    </update>

    <update id="changeToUnavailable" parameterType="java.lang.Long">
        UPDATE sys_role SET available = 0 WHERE role_id = #{id}
    </update>

    <insert id="createRole" useGeneratedKeys="true" keyProperty="id" parameterType="com.zhang.entity.Role">
        INSERT INTO sys_role
        <include refid="Base_Insert_Column_List"/>
        VALUES (#{createdDate}, #{createdBy}, #{modifiedDate}, #{modifiedBy},
        #{name}, #{description}, #{available})
    </insert>

    <insert id="addRoleResource" parameterType="java.util.List">
        INSERT INTO sys_role_resource VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleId}, #{item.resourceId})
        </foreach>
    </insert>

    <update id="updateRole" parameterType="com.zhang.entity.Role">
        UPDATE sys_role
        SET role_name = #{name}, description = #{description}, modified_date = #{modifiedDate}, modified_by = #{modifiedBy}
        WHERE role_id = #{id}
    </update>

    <delete id="deleteRoleResource" parameterType="java.lang.Long">
        DELETE FROM sys_role_resource
        WHERE role_id = #{id}
    </delete>
</mapper>